---
# tasks file for roles/openstack-main

- name: Authenticate to cloud and return auth token
  become: false
  openstack.cloud.auth:
    cloud: "{{ openstack_cloud }}"

- name: Launching three instances on OpenStack
  become: false
  openstack.cloud.server:
    state: present
    name: "{{ item }}"
    region_name: "{{ region_name }}"
    image: "{{ image_id }}"
    key_name: "{{ key_name }}"
    timeout: "{{ timeout }}"
    flavor: "{{ flavor }}"
    network: "{{ network_id }}"
    security_groups:
      - default
    auto_ip: true  # Automatically assigns a floating IP
    # availability_zone: "{{ availability_zone }}" uncomment if available
  register: servers
  loop: "{{ instance_tag }}"



- debug:
    msg: "{{ servers.results[0].server }}"

- name: Extract the network name key
  set_fact:
    dynamic_key: "{{ (servers.results[0].server.addresses | dict2items | first).key }}"

- name: Add 1st instance to host group openstack_control
  add_host:
    hostname: "{{ (servers.results[0].server.addresses[dynamic_key] | first).addr }}"
    groupname: openstack_control

- name: Add 2nd instance to host group openstack_worker
  add_host:
    hostname: "{{ (servers.results[1].server.addresses[dynamic_key] | first).addr }}"
    groupname: openstack_worker

- name: Add 3rd instance to host group openstack_worker
  add_host:
    hostname: "{{ (servers.results[2].server.addresses[dynamic_key] | first).addr }}"
    groupname: openstack_worker

- name: Wait for SSH to come up
  wait_for:
    host: "{{ (servers.results[0].server.addresses[dynamic_key] | first).addr }}"
    port: 22
    delay: 120  # Wait 60 seconds before checking
    timeout: 1000  # Wait up to 600 seconds
    state: started
  delegate_to: localhost
